// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: schedule.proto

// Определяем пакет для proto-файла

package schedule

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Типы источников данных
type ScheduleSourceType int32

const (
	ScheduleSourceType_SCHEDULE_SOURCE_TYPE_UNSPECIFIED ScheduleSourceType = 0
	ScheduleSourceType_SCHEDULE_SOURCE_TYPE_MAIN        ScheduleSourceType = 1
	ScheduleSourceType_SCHEDULE_SOURCE_TYPE_CHANGE      ScheduleSourceType = 2
)

// Enum value maps for ScheduleSourceType.
var (
	ScheduleSourceType_name = map[int32]string{
		0: "SCHEDULE_SOURCE_TYPE_UNSPECIFIED",
		1: "SCHEDULE_SOURCE_TYPE_MAIN",
		2: "SCHEDULE_SOURCE_TYPE_CHANGE",
	}
	ScheduleSourceType_value = map[string]int32{
		"SCHEDULE_SOURCE_TYPE_UNSPECIFIED": 0,
		"SCHEDULE_SOURCE_TYPE_MAIN":        1,
		"SCHEDULE_SOURCE_TYPE_CHANGE":      2,
	}
)

func (x ScheduleSourceType) Enum() *ScheduleSourceType {
	p := new(ScheduleSourceType)
	*p = x
	return p
}

func (x ScheduleSourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScheduleSourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_schedule_proto_enumTypes[0].Descriptor()
}

func (ScheduleSourceType) Type() protoreflect.EnumType {
	return &file_schedule_proto_enumTypes[0]
}

func (x ScheduleSourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScheduleSourceType.Descriptor instead.
func (ScheduleSourceType) EnumDescriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{0}
}

// Типы изменений в расписании
type ScheduleChangeType int32

const (
	ScheduleChangeType_SCHEDULE_CHANGE_TYPE_UNSPECIFIED  ScheduleChangeType = 0
	ScheduleChangeType_SCHEDULE_CHANGE_TYPE_REPLACEMENT  ScheduleChangeType = 1
	ScheduleChangeType_SCHEDULE_CHANGE_TYPE_CANCELLATION ScheduleChangeType = 2
	ScheduleChangeType_SCHEDULE_CHANGE_TYPE_ADDITION     ScheduleChangeType = 3
)

// Enum value maps for ScheduleChangeType.
var (
	ScheduleChangeType_name = map[int32]string{
		0: "SCHEDULE_CHANGE_TYPE_UNSPECIFIED",
		1: "SCHEDULE_CHANGE_TYPE_REPLACEMENT",
		2: "SCHEDULE_CHANGE_TYPE_CANCELLATION",
		3: "SCHEDULE_CHANGE_TYPE_ADDITION",
	}
	ScheduleChangeType_value = map[string]int32{
		"SCHEDULE_CHANGE_TYPE_UNSPECIFIED":  0,
		"SCHEDULE_CHANGE_TYPE_REPLACEMENT":  1,
		"SCHEDULE_CHANGE_TYPE_CANCELLATION": 2,
		"SCHEDULE_CHANGE_TYPE_ADDITION":     3,
	}
)

func (x ScheduleChangeType) Enum() *ScheduleChangeType {
	p := new(ScheduleChangeType)
	*p = x
	return p
}

func (x ScheduleChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScheduleChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_schedule_proto_enumTypes[1].Descriptor()
}

func (ScheduleChangeType) Type() protoreflect.EnumType {
	return &file_schedule_proto_enumTypes[1]
}

func (x ScheduleChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScheduleChangeType.Descriptor instead.
func (ScheduleChangeType) EnumDescriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{1}
}

// Запрос на получение расписания для группы
type GetScheduleForGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupName     string                 `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"` // JWT токен для аутентификации
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScheduleForGroupRequest) Reset() {
	*x = GetScheduleForGroupRequest{}
	mi := &file_schedule_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScheduleForGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduleForGroupRequest) ProtoMessage() {}

func (x *GetScheduleForGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduleForGroupRequest.ProtoReflect.Descriptor instead.
func (*GetScheduleForGroupRequest) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{0}
}

func (x *GetScheduleForGroupRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GetScheduleForGroupRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *GetScheduleForGroupRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// Ответ с расписанием для группы
type GetScheduleForGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Schedule      []*ScheduleEntry       `protobuf:"bytes,3,rep,name=schedule,proto3" json:"schedule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScheduleForGroupResponse) Reset() {
	*x = GetScheduleForGroupResponse{}
	mi := &file_schedule_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScheduleForGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduleForGroupResponse) ProtoMessage() {}

func (x *GetScheduleForGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduleForGroupResponse.ProtoReflect.Descriptor instead.
func (*GetScheduleForGroupResponse) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{1}
}

func (x *GetScheduleForGroupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetScheduleForGroupResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetScheduleForGroupResponse) GetSchedule() []*ScheduleEntry {
	if x != nil {
		return x.Schedule
	}
	return nil
}

// Запись в расписании
type ScheduleEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupName     string                 `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	TimeStart     string                 `protobuf:"bytes,4,opt,name=time_start,json=timeStart,proto3" json:"time_start,omitempty"`
	TimeEnd       string                 `protobuf:"bytes,5,opt,name=time_end,json=timeEnd,proto3" json:"time_end,omitempty"`
	Subject       string                 `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject,omitempty"`
	Teacher       string                 `protobuf:"bytes,7,opt,name=teacher,proto3" json:"teacher,omitempty"`
	Classroom     string                 `protobuf:"bytes,8,opt,name=classroom,proto3" json:"classroom,omitempty"`
	SourceType    ScheduleSourceType     `protobuf:"varint,9,opt,name=source_type,json=sourceType,proto3,enum=schedule.ScheduleSourceType" json:"source_type,omitempty"`
	SourceId      string                 `protobuf:"bytes,10,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleEntry) Reset() {
	*x = ScheduleEntry{}
	mi := &file_schedule_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleEntry) ProtoMessage() {}

func (x *ScheduleEntry) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleEntry.ProtoReflect.Descriptor instead.
func (*ScheduleEntry) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{2}
}

func (x *ScheduleEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScheduleEntry) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *ScheduleEntry) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ScheduleEntry) GetTimeStart() string {
	if x != nil {
		return x.TimeStart
	}
	return ""
}

func (x *ScheduleEntry) GetTimeEnd() string {
	if x != nil {
		return x.TimeEnd
	}
	return ""
}

func (x *ScheduleEntry) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *ScheduleEntry) GetTeacher() string {
	if x != nil {
		return x.Teacher
	}
	return ""
}

func (x *ScheduleEntry) GetClassroom() string {
	if x != nil {
		return x.Classroom
	}
	return ""
}

func (x *ScheduleEntry) GetSourceType() ScheduleSourceType {
	if x != nil {
		return x.SourceType
	}
	return ScheduleSourceType_SCHEDULE_SOURCE_TYPE_UNSPECIFIED
}

func (x *ScheduleEntry) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

// Запрос на получение активного снапшота расписания
type GetActiveScheduleSnapshotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // JWT токен для аутентификации
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveScheduleSnapshotRequest) Reset() {
	*x = GetActiveScheduleSnapshotRequest{}
	mi := &file_schedule_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveScheduleSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveScheduleSnapshotRequest) ProtoMessage() {}

func (x *GetActiveScheduleSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveScheduleSnapshotRequest.ProtoReflect.Descriptor instead.
func (*GetActiveScheduleSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{3}
}

func (x *GetActiveScheduleSnapshotRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// Ответ с активным снапшотом расписания
type GetActiveScheduleSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Snapshot      *ScheduleSnapshot      `protobuf:"bytes,3,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveScheduleSnapshotResponse) Reset() {
	*x = GetActiveScheduleSnapshotResponse{}
	mi := &file_schedule_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveScheduleSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveScheduleSnapshotResponse) ProtoMessage() {}

func (x *GetActiveScheduleSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveScheduleSnapshotResponse.ProtoReflect.Descriptor instead.
func (*GetActiveScheduleSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{4}
}

func (x *GetActiveScheduleSnapshotResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetActiveScheduleSnapshotResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetActiveScheduleSnapshotResponse) GetSnapshot() *ScheduleSnapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

// Снапшот расписания
type ScheduleSnapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PeriodStart   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"`
	PeriodEnd     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=period_end,json=periodEnd,proto3" json:"period_end,omitempty"`
	Data          string                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"` // JSON данные в виде строки
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	SourceUrl     string                 `protobuf:"bytes,7,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	IsActive      bool                   `protobuf:"varint,8,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleSnapshot) Reset() {
	*x = ScheduleSnapshot{}
	mi := &file_schedule_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleSnapshot) ProtoMessage() {}

func (x *ScheduleSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleSnapshot.ProtoReflect.Descriptor instead.
func (*ScheduleSnapshot) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{5}
}

func (x *ScheduleSnapshot) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScheduleSnapshot) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScheduleSnapshot) GetPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodStart
	}
	return nil
}

func (x *ScheduleSnapshot) GetPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodEnd
	}
	return nil
}

func (x *ScheduleSnapshot) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ScheduleSnapshot) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ScheduleSnapshot) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *ScheduleSnapshot) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

// Запрос на получение истории снапшотов
type GetScheduleSnapshotsHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // JWT токен для аутентификации
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScheduleSnapshotsHistoryRequest) Reset() {
	*x = GetScheduleSnapshotsHistoryRequest{}
	mi := &file_schedule_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScheduleSnapshotsHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduleSnapshotsHistoryRequest) ProtoMessage() {}

func (x *GetScheduleSnapshotsHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduleSnapshotsHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetScheduleSnapshotsHistoryRequest) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{6}
}

func (x *GetScheduleSnapshotsHistoryRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// Ответ с историей снапшотов
type GetScheduleSnapshotsHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Snapshots     []*ScheduleSnapshot    `protobuf:"bytes,3,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScheduleSnapshotsHistoryResponse) Reset() {
	*x = GetScheduleSnapshotsHistoryResponse{}
	mi := &file_schedule_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScheduleSnapshotsHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduleSnapshotsHistoryResponse) ProtoMessage() {}

func (x *GetScheduleSnapshotsHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduleSnapshotsHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetScheduleSnapshotsHistoryResponse) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{7}
}

func (x *GetScheduleSnapshotsHistoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetScheduleSnapshotsHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetScheduleSnapshotsHistoryResponse) GetSnapshots() []*ScheduleSnapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

var File_schedule_proto protoreflect.FileDescriptor

const file_schedule_proto_rawDesc = "" +
	"\n" +
	"\x0eschedule.proto\x12\bschedule\x1a\x1fgoogle/protobuf/timestamp.proto\"\x81\x01\n" +
	"\x1aGetScheduleForGroupRequest\x12\x1d\n" +
	"\n" +
	"group_name\x18\x01 \x01(\tR\tgroupName\x12.\n" +
	"\x04date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\"\x86\x01\n" +
	"\x1bGetScheduleForGroupResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x123\n" +
	"\bschedule\x18\x03 \x03(\v2\x17.schedule.ScheduleEntryR\bschedule\"\xd6\x02\n" +
	"\rScheduleEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"group_name\x18\x02 \x01(\tR\tgroupName\x12.\n" +
	"\x04date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12\x1d\n" +
	"\n" +
	"time_start\x18\x04 \x01(\tR\ttimeStart\x12\x19\n" +
	"\btime_end\x18\x05 \x01(\tR\atimeEnd\x12\x18\n" +
	"\asubject\x18\x06 \x01(\tR\asubject\x12\x18\n" +
	"\ateacher\x18\a \x01(\tR\ateacher\x12\x1c\n" +
	"\tclassroom\x18\b \x01(\tR\tclassroom\x12=\n" +
	"\vsource_type\x18\t \x01(\x0e2\x1c.schedule.ScheduleSourceTypeR\n" +
	"sourceType\x12\x1b\n" +
	"\tsource_id\x18\n" +
	" \x01(\tR\bsourceId\"8\n" +
	" GetActiveScheduleSnapshotRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"\x8f\x01\n" +
	"!GetActiveScheduleSnapshotResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x126\n" +
	"\bsnapshot\x18\x03 \x01(\v2\x1a.schedule.ScheduleSnapshotR\bsnapshot\"\xbb\x02\n" +
	"\x10ScheduleSnapshot\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12=\n" +
	"\fperiod_start\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vperiodStart\x129\n" +
	"\n" +
	"period_end\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tperiodEnd\x12\x12\n" +
	"\x04data\x18\x05 \x01(\tR\x04data\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"source_url\x18\a \x01(\tR\tsourceUrl\x12\x1b\n" +
	"\tis_active\x18\b \x01(\bR\bisActive\":\n" +
	"\"GetScheduleSnapshotsHistoryRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"\x93\x01\n" +
	"#GetScheduleSnapshotsHistoryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x128\n" +
	"\tsnapshots\x18\x03 \x03(\v2\x1a.schedule.ScheduleSnapshotR\tsnapshots*z\n" +
	"\x12ScheduleSourceType\x12$\n" +
	" SCHEDULE_SOURCE_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19SCHEDULE_SOURCE_TYPE_MAIN\x10\x01\x12\x1f\n" +
	"\x1bSCHEDULE_SOURCE_TYPE_CHANGE\x10\x02*\xaa\x01\n" +
	"\x12ScheduleChangeType\x12$\n" +
	" SCHEDULE_CHANGE_TYPE_UNSPECIFIED\x10\x00\x12$\n" +
	" SCHEDULE_CHANGE_TYPE_REPLACEMENT\x10\x01\x12%\n" +
	"!SCHEDULE_CHANGE_TYPE_CANCELLATION\x10\x02\x12!\n" +
	"\x1dSCHEDULE_CHANGE_TYPE_ADDITION\x10\x032\xe7\x02\n" +
	"\x0fScheduleService\x12b\n" +
	"\x13GetScheduleForGroup\x12$.schedule.GetScheduleForGroupRequest\x1a%.schedule.GetScheduleForGroupResponse\x12t\n" +
	"\x19GetActiveScheduleSnapshot\x12*.schedule.GetActiveScheduleSnapshotRequest\x1a+.schedule.GetActiveScheduleSnapshotResponse\x12z\n" +
	"\x1bGetScheduleSnapshotsHistory\x12,.schedule.GetScheduleSnapshotsHistoryRequest\x1a-.schedule.GetScheduleSnapshotsHistoryResponseB\fZ\n" +
	"./scheduleb\x06proto3"

var (
	file_schedule_proto_rawDescOnce sync.Once
	file_schedule_proto_rawDescData []byte
)

func file_schedule_proto_rawDescGZIP() []byte {
	file_schedule_proto_rawDescOnce.Do(func() {
		file_schedule_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_schedule_proto_rawDesc), len(file_schedule_proto_rawDesc)))
	})
	return file_schedule_proto_rawDescData
}

var file_schedule_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_schedule_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_schedule_proto_goTypes = []any{
	(ScheduleSourceType)(0),                     // 0: schedule.ScheduleSourceType
	(ScheduleChangeType)(0),                     // 1: schedule.ScheduleChangeType
	(*GetScheduleForGroupRequest)(nil),          // 2: schedule.GetScheduleForGroupRequest
	(*GetScheduleForGroupResponse)(nil),         // 3: schedule.GetScheduleForGroupResponse
	(*ScheduleEntry)(nil),                       // 4: schedule.ScheduleEntry
	(*GetActiveScheduleSnapshotRequest)(nil),    // 5: schedule.GetActiveScheduleSnapshotRequest
	(*GetActiveScheduleSnapshotResponse)(nil),   // 6: schedule.GetActiveScheduleSnapshotResponse
	(*ScheduleSnapshot)(nil),                    // 7: schedule.ScheduleSnapshot
	(*GetScheduleSnapshotsHistoryRequest)(nil),  // 8: schedule.GetScheduleSnapshotsHistoryRequest
	(*GetScheduleSnapshotsHistoryResponse)(nil), // 9: schedule.GetScheduleSnapshotsHistoryResponse
	(*timestamppb.Timestamp)(nil),               // 10: google.protobuf.Timestamp
}
var file_schedule_proto_depIdxs = []int32{
	10, // 0: schedule.GetScheduleForGroupRequest.date:type_name -> google.protobuf.Timestamp
	4,  // 1: schedule.GetScheduleForGroupResponse.schedule:type_name -> schedule.ScheduleEntry
	10, // 2: schedule.ScheduleEntry.date:type_name -> google.protobuf.Timestamp
	0,  // 3: schedule.ScheduleEntry.source_type:type_name -> schedule.ScheduleSourceType
	7,  // 4: schedule.GetActiveScheduleSnapshotResponse.snapshot:type_name -> schedule.ScheduleSnapshot
	10, // 5: schedule.ScheduleSnapshot.period_start:type_name -> google.protobuf.Timestamp
	10, // 6: schedule.ScheduleSnapshot.period_end:type_name -> google.protobuf.Timestamp
	10, // 7: schedule.ScheduleSnapshot.created_at:type_name -> google.protobuf.Timestamp
	7,  // 8: schedule.GetScheduleSnapshotsHistoryResponse.snapshots:type_name -> schedule.ScheduleSnapshot
	2,  // 9: schedule.ScheduleService.GetScheduleForGroup:input_type -> schedule.GetScheduleForGroupRequest
	5,  // 10: schedule.ScheduleService.GetActiveScheduleSnapshot:input_type -> schedule.GetActiveScheduleSnapshotRequest
	8,  // 11: schedule.ScheduleService.GetScheduleSnapshotsHistory:input_type -> schedule.GetScheduleSnapshotsHistoryRequest
	3,  // 12: schedule.ScheduleService.GetScheduleForGroup:output_type -> schedule.GetScheduleForGroupResponse
	6,  // 13: schedule.ScheduleService.GetActiveScheduleSnapshot:output_type -> schedule.GetActiveScheduleSnapshotResponse
	9,  // 14: schedule.ScheduleService.GetScheduleSnapshotsHistory:output_type -> schedule.GetScheduleSnapshotsHistoryResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_schedule_proto_init() }
func file_schedule_proto_init() {
	if File_schedule_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_schedule_proto_rawDesc), len(file_schedule_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_schedule_proto_goTypes,
		DependencyIndexes: file_schedule_proto_depIdxs,
		EnumInfos:         file_schedule_proto_enumTypes,
		MessageInfos:      file_schedule_proto_msgTypes,
	}.Build()
	File_schedule_proto = out.File
	file_schedule_proto_goTypes = nil
	file_schedule_proto_depIdxs = nil
}
